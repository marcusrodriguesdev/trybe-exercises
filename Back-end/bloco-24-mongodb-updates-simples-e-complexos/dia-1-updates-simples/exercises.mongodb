use class;

// Exercise 1
db.movies.updateOne(
  { title: "Batman" },
  { $set: { imdbRating: 7.7 } }
);
db.movies.find();

// Exercise 2
db.movies.updateOne(
  { title: "Godzilla" },
  { $set: { budget: 1 } }
);
db.movies.find();

// Exercise 3
db.movies.updateOne(
  { title: "Home Alone" },
  { $set: { budget: 15, imdbRating: 5.5 }  },
);
db.movies.find();

// Exercise 4
db.movies.updateOne(
  { title: "Batman" },
  { $inc: { imdbRating: 2 } }
);
db.movies.find();

// Exercise 5
db.movies.updateOne(
  { title: "Home Alone" },
  { $inc: { budget: 5 } }
);
db.movies.find();

// Exercise 6
db.movies.updateOne(
  { title: "Batman" },
  { $mul: { imdbRating: 4 } }
);
db.movies.find();

// Exercise 7
db.movies.updateOne(
  { title: "Batman" },
  { $rename: { budget: "estimatedBudget" } }
);
db.movies.find();

// Exercise 8
db.movies.updateOne(
  { title: "Home Alone" },
  { $min: { budget: 5 } }
);
db.movies.find();

// Exercise 9
db.movies.updateOne(
  { title: "Godzilla" },
  { 
    $max: { imdbRating: 8.6 },
    $set: { "category.1": "Thriller" }
  }
);
db.movies.find();

// Exercise 10
db.movies.updateOne(
  { title: "Home Alone" },
  { $currentDate: { 
      lastUpdate: { $type: "timestamp" }
   } }
);
db.movies.find();

// Exercise 11
db.movies.updateMany(
  {},
  { $set: { sequels: 0 } }
);
db.movies.find();

// Exercise 12
db.movies.updateMany(
  {},
  { $unset: { budget: "", estimatedBudget: "" } }
);
db.movies.find();